spring:
  profiles:
    active: ${PROFILE}
  main:
    allow-bean-definition-overriding: true
  redis:
    host: 127.0.0.1
    port: 6379
    password: mock
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: forTesting
            client-secret: forTesting
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/oauth2/callback/google"
            client-name: Google
          kakao:
            clientId: forTesting
            clientSecret: forTesting
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/oauth2/callback/kakao"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
          facebook:
            clientId: forTesting
            clientSecret: forTesting
            redirect-uri: "{baseUrl}/oauth2/callback/facebook"
            scope:
              - email
              - public_profile
            clientName: Facebook
        provider:
          kakao:
            authorization_uri: https://kauth.kakao.com/oauth/authorize
            token_uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user_name_attribute: id

jwt:
    secret: randomTestValueItisNotUsedInProdEnv
    expiration: 1800000
    # 30 minutes
    refresh:
        expiration: 604800000
    # 7 days

admin:
  email : test@gmail.com,test1@gmail.com


payment:
  toss:
    test_client_api_key : test_ck_testesttetst
    test_secrete_api_key : test_sk_Lsetestestest
    success_url : "http://localhost:8080/api/v1/payments/toss/success"
    fail_url : "http://localhost:8080/api/v1/payments/toss/fail"